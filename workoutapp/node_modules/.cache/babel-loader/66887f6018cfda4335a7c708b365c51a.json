{"ast":null,"code":"var _jsxFileName = \"/Users/KatieDeRosier/GA/codingProjects/Project 3 - workout app react/workoutapp/src/components/workouts/workout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { withRouter } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport { getWorkout } from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\nconst WorkoutView = props => {\n  const params = useParams();\n  console.log(\"params\", params);\n  console.log(\"prrrr: \", props); // const workoutId = props.match.params.id;\n  // const workoutId = workoutData.id;\n\n  const [added, setAdded] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [workout, setWorkout] = useState({});\n  const [exercises, setExercises] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getWorkout(params.id).then(data => {\n      setLoading(false);\n      setWorkout(data.name);\n      setExercises(data.exercises);\n      console.log(\"individ workout\", data);\n    });\n  }, []);\n\n  const handleOnClick = () => {\n    setAdded(true);\n    setClicked(true);\n  };\n\n  console.log(\"state..... \", added);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Loading\"), !loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/workouts/saved`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    size: \"lg\",\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Add new exercise\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, workout.name), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, exercises.map(exercise => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, exercise.name) // <li>{exercise.description}</li>\n  )), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"individual workout view\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }, \"muscle group: glutes\")), added ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  }, \"Workout added\") : null, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Add to saved workouts\")), \") }\");\n};\n\nexport default withRouter(WorkoutView);","map":{"version":3,"sources":["/Users/KatieDeRosier/GA/codingProjects/Project 3 - workout app react/workoutapp/src/components/workouts/workout.js"],"names":["React","useState","useEffect","Button","withRouter","useParams","getWorkout","Link","WorkoutView","props","params","console","log","added","setAdded","clicked","setClicked","workout","setWorkout","exercises","setExercises","loading","setLoading","id","then","data","name","handleOnClick","map","exercise"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { withRouter } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport { getWorkout } from \"../../api\";\nimport { Link } from \"react-router-dom\";\n\n\nconst WorkoutView = (props) => {\n  const params = useParams();\n  console.log(\"params\", params);\n\n  console.log(\"prrrr: \", props);\n  // const workoutId = props.match.params.id;\n  // const workoutId = workoutData.id;\n\n  const [added, setAdded] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const [workout, setWorkout] = useState({});\n  const [exercises, setExercises] = useState([])\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getWorkout(params.id).then((data) => {\n      setLoading(false)\n      setWorkout(data.name);\n      setExercises(data.exercises)\n      console.log(\"individ workout\", data);\n    });\n  }, []);\n\n  const handleOnClick = () => {\n    setAdded(true);\n    setClicked(true);\n  };\n\n  console.log(\"state..... \", added);\n\n  return (\n    <>\n    {loading && <p>Loading</p>}\n    {!loading && \n      <div>\n      <div>\n        <Link to={`/workouts/saved`}>\n          <Button variant=\"primary\" size=\"lg\" active>\n            Add new exercise\n          </Button>\n        </Link>\n      </div>\n      <div>\n        <p>{workout.name}</p>\n        <ol>\n      {exercises.map((exercise) => (\n          <li>{exercise.name}</li>\n        // <li>{exercise.description}</li>\n      ))}\n    </ol>\n      {/* <p>{workout.exercises[0]}</p> */}\n       {/* <ul>\n                {workout.exercises.map((singleWorkout) => {\n                    return (\n                   <li>{singleWorkout.name}</li>\n                    )\n                })}\n                </ul> */}\n\n      <h1>individual workout view</h1>\n       <h3>muscle group: glutes</h3> \n      </div>\n\n      {added ? <h3>Workout added</h3> : null}\n      <Button onClick={handleOnClick}>Add to saved workouts</Button>\n    </div>\n              })\n            }\n    {/* // <div>\n    //   <div>\n    //     <Link to={`/workouts/saved`}>\n    //       <Button variant=\"primary\" size=\"lg\" active>\n    //         Add new exercise\n    //       </Button>\n    //     </Link>\n    //   </div>\n    //   <div>\n    //     <p>{workout.name}</p>\n        {/* <p>{workout.exercises[0]}</p> */}\n        {/* <ul>\n                {workout.exercises.map((singleWorkout) => {\n                    return (\n                   <li>{singleWorkout.name}</li>\n                    )\n                })}\n                </ul> */}\n\n        {/* <h1>individual workout view</h1>\n                {/* <h3>id: {workoutId}</h3> */}\n        {/* <h3>muscle group: glutes</h3> */}\n      {/* </div>\n\n      {added ? <h3>Workout added</h3> : null}\n      <Button onClick={handleOnClick}>Add to saved workouts</Button>\n    </div> */}\n    </>\n  );\n};\n\nexport default withRouter(WorkoutView);\n"]},"metadata":{},"sourceType":"module"}